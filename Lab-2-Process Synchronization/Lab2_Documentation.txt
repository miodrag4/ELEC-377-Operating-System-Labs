
//Problem Statement
The object of the lab is to utilize the pthread library to create parallel threads and to synchronize access to shared data structures using pthread semaphores. This is achieved by writing a system that simulates a distributed system monitor, where each monitor represented a separate thread that reads data from a file.

//How the parts of the lab link together
The chain of operations for lab2 begins with the the assignment of monitor threads. Semaphores are created and then the main program checks for the appropriate number of monitors and other metrics. Subsequently, threads for each monitor are created and the associated parameters are passed to them. The function reader_thread checks for relevant updates and retrieves machines statistics. These statistics are then summarized in a new variable and averages are calculated for each machine. The reader_thread function is complete when all the machines have finished running. Following the reader threads, the function printer_thread initiates the printer threads. The printer_thread function is active given a while loop that receives updates from the reader threads. While active it has a delay period from the function print_period. The mutex information is then retrieved and prints summary information. The mutex is released. Chronologically, the mutex exits the function, the reader_thread and printer_thread exit and then the main program will exit when the program completes.
